@using Schaad.TeamLunch.WebUi.Models
@model WheelModel

<h2>@ViewBag.Title</h2>
<h3 id="win"></h3>
<div class="row">
    <div class="col-md-12">
        <table cellpadding="0" cellspacing="0" border="0">
            <tr>
                <td>
                    <div class="power_controls">
                        <img class="clickable" id="spin_button" src="/Content/wheel/spin_on.png" alt="Spin" onClick="startSpin();" />
                    </div>
                </td>
                <td width="438" height="582" class="the_wheel" align="center" valign="center">
                    <canvas id="canvas" width="434" height="434">
                        <p style="{color: white}" align="center">Sorry, your browser doesn't support canvas. Please try another.</p>
                    </canvas>
                </td>
            </tr>
        </table>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <br />
    </div>
</div>

@foreach (var restaurant in Model.VotesPerRestaurant)
{
    <div class="row">
        <div class="col-md-2">
            @restaurant.Key.Name
        </div>
        <div class="col-md-8">
            @string.Join(", ", @restaurant.Select(r => r.Voter.ToLower().Replace("@digitecgalaxus.ch","")))
        </div>
    </div>
}


<div class="row">
    <div class="col-md-12">
        <br />
    </div>
</div>

@section scripts
{
    <script>

            // Create new wheel object specifying the parameters at creation time.
            let theWheel = new Winwheel({
                'numSegments': @Model.Restaurants.Count,     // Specify number of segments.
                'outerRadius': 212,   // Set outer radius so wheel fits inside the background.
                'textFontSize': 16,    // Set font size as desired.
                'segments':        // Define segments including colour and text.
                    [
                        @foreach (var restaurant in Model.Restaurants)
                        {
                            <text>
                                { 'fillStyle': '@restaurant.Color', 'text': '@restaurant.Name' },
                            </text>
                        }
                    ],
                'animation':           // Specify the animation to use.
                    {
                        'type': 'spinToStop',
                        'duration': 15,
                        'spins': @Model.Restaurants.Count,
                        'callbackFinished': alertPrize,
                        'callbackSound': playSound,   // Function to call when the tick sound is to be triggered.
                        'soundTrigger': 'pin'        // Specify pins are to trigger the sound, the other option is 'segment'.
                    },
                'pins':
                    {
                        'number': @Model.Restaurants.Count   // Number of pins. They space evenly around the wheel.
                    }
            });

            // -----------------------------------------------------------------
            // This function is called when the segment under the prize pointer changes
            // we can play a small tick sound here like you would expect on real prizewheels.
            // -----------------------------------------------------------------
            let audio = new Audio('/Content/wheel/tick.mp3');  // Create audio object and load tick.mp3 file.

            function playSound() {
                // Stop and rewind the sound if it already happens to be playing.
                audio.pause();
                audio.currentTime = 0;

                // Play the sound.
                audio.play();
            }

            // -------------------------------------------------------
            // Called when the spin animation has finished by the callback feature of the wheel because I specified callback in the parameters
            // note the indicated segment is passed in as a parmeter as 99% of the time you will want to know this to inform the user of their prize.
            // -------------------------------------------------------
            function alertPrize(indicatedSegment) {
                // Do basic alert of the segment text.
                // You would probably want to do something more interesting with this information.
                new Audio('/Content/wheel/applause.mp3').play();
                $('#win').html('Gewonnen hat: ' + indicatedSegment.text);
            }

            // =======================================================================================================================
            // Code below for the power controls etc which is entirely optional. You can spin the wheel simply by
            // calling theWheel.startAnimation();
            // =======================================================================================================================
            let wheelPower = 2;
            let wheelSpinning = false;

            // -------------------------------------------------------
            // Click handler for spin button.
            // -------------------------------------------------------
            function startSpin() {
                // Ensure that spinning can't be clicked again while already running.
                if (wheelSpinning == false) {
                    // Based on the power level selected adjust the number of spins for the wheel, the more times is has
                    // to rotate with the duration of the animation the quicker the wheel spins.
                    if (wheelPower == 1) {
                        theWheel.animation.spins = 3;
                    } else if (wheelPower == 2) {
                        theWheel.animation.spins = 8;
                    } else if (wheelPower == 3) {
                        theWheel.animation.spins = 15;
                    }

                    // Disable the spin button so can't click again while wheel is spinning.
                    document.getElementById('spin_button').src = "/Content/wheel/spin_off.png";
                    document.getElementById('spin_button').className = "";

                    // Begin the spin animation by calling startAnimation on the wheel object.
                    theWheel.startAnimation();

                    // Set to true so that power can't be changed and spin button re-enabled during
                    // the current animation. The user will have to reset before spinning again.
                    wheelSpinning = true;
                }
            }
    </script>
}
